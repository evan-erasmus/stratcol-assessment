services:
  app:
    build:
      context: .
      dockerfile: docker/app.Dockerfile
    container_name: ${DOCKER_APP_NAME:-laravel}-app
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - DB_CONNECTION=${DB_CONNECTION:-pgsql}
      - DB_HOST=${DB_HOST:-db}
      - DB_PORT=${DB_PORT:-5432}
      - DB_DATABASE=${DB_DATABASE:-laravel}
      - DB_USERNAME=${DB_USERNAME:-postgres}
      - DB_PASSWORD=${DB_PASSWORD:-secret}
      - REDIS_HOST=redis
      - REDIS_PORT=${REDIS_PORT:-6379}
    volumes:
      - ./:/var/www/html
      - ./storage:/var/www/html/storage
    networks:
      - app-network
    depends_on:
      - db
      - redis

  web:
    build:
      context: .
      dockerfile: docker/web.Dockerfile
      args:
        - APP_NAME=${DOCKER_APP_NAME:-laravel}
        - NGINX_PORT=${DOCKER_NGINX_PORT:-80}
    container_name: ${DOCKER_APP_NAME:-laravel}-web
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - "${DOCKER_APP_PORT:-8000}:${NGINX_PORT:-80}"
    volumes:
      - ./:/var/www/html
      - ./storage:/var/www/html/storage
    networks:
      - app-network
    depends_on:
      - app

  db:
    build:
      context: .
      dockerfile: docker/db.Dockerfile
    container_name: ${DOCKER_APP_NAME:-laravel}-db
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - POSTGRES_DB=${DB_DATABASE:-laravel}
      - POSTGRES_USER=${DB_USERNAME:-postgres}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-secret}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
    ports:
      - "${DB_PORT:-5432}:5432"

  redis:
    build:
      context: .
      dockerfile: docker/redis.Dockerfile
    container_name: ${DOCKER_APP_NAME:-laravel}-redis
    restart: unless-stopped
    env_file:
      - .env
    volumes:
      - redis_data:/data
    networks:
      - app-network
    ports:
      - "${REDIS_PORT:-6379}:6379"

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
